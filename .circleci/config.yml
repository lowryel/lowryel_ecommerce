# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  python: circleci/python@1.5.0

jobs:
  build-and-test: 
    docker:
      - image: cimg/python:3.8

    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          # app-dir: ~/project/package-directory/  # If you're requirements.txt isn't in the root directory.
          pip-dependency-file: requirements.txt  # if you have a different name for your requirements file, maybe one that combines your runtime and test requirements.
      - run:
          name: Run tests
          command: python manage.py test

  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy --template-file .circleci/files/backend.yml \
            --stack-name "django-backend-${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}" \
            --tags project=django

      - run:
          name: Update inventory with backend ip
          command: |
            aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --output text >> .circleci/ansible/inventory.txt

      - run:
          name: Check for Ip
          command:
            cat .circleci/ansible/inventory.txt

      - persist_to_workspace:
          root: .circleci/ansible
          paths:
            - inventory.txt

  configure-infrastructure:
    docker:
      - image: python:3.10.5-alpine3.16
    steps:
      - checkout
      - attach_workspace:
          at: .circleci/ansible
      - add_ssh_keys:
          fingerprints: ["d5:b9:73:ee:dc:25:b5:34:5a:23:f1:ae:08:5a:2a:21"]
      - run: apk add --update ansible # Install ansible
      - run:
          name: Install dependencies (openssh)
          command: |
            apk add --update openssh # Install openssh and git
            apk add --update git # Install git

      - run:
          name: Install dependencies (awscli, tar and gzip)
          command: |
            apk --no-cache add py-pip
            pip install awscli
            apk add --update tar gzip

      - run:
          name: Run your playbook to configure server
          command: |
            cd .circleci/ansible
            cat inventory.txt
            ansible-playbook -i inventory.txt configure-server.yml

      - run:
          name: Install dependences
          command: 
            sudo apt update & sudo apt upgrade    
            sudo apt install python3-pip
            python3 -m pip install --upgrade pip
            pip install django==4.1
            pip install -r requirements.txt

      - run:
          name: Copy files and folders
          command: |
            scp -i *.pem lowryel_ecommerce.zip ubuntu@public_ip:~/
            sudo apt install unzip
            unzip source_directory.zip



# Invoke jobs via workflows
workflows:
  my-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - deploy-infrastructure:
          requires:
            - build-and-test